#!/usr/bin/env python
# -*- coding:utf-8 -*-
import requests
import json
import socket
import re

"""Entrer une addresse IP ou un nom de domaine"""
def get_ip_geo_from_url(input):
    """Mofication Parser url et recuperer la partie essentiel pour analyser apres"""
    compile_rule1 = re.compile('^(?:http:\/\/|www\.|https:\/\/)([^\/]+)')
    match1 = re.match(compile_rule1, input)
    """Verifier cela est une addresse IP ou pas"""
    compile_rule = re.compile(r'(?<![\.\d])(?:\d{1,3}\.){3}\d{1,3}(?![\.\d])')
    match = re.match(compile_rule, match1.group(1))
    """Si cela est une addresse IP"""
    if match:
        ip = match.group()
    else:
        try:
            ip = socket.getaddrinfo(match1.group(1), 'http')[0][4][0]
        except:
            ip = "0.0.0.0"
    """A l aide du site ipstack, lire les donnÃ©es de cette addresse"""
    url = 'http://api.ipstack.com/' + ip + '?access_key=9c2e7cb0044b4a2e7d4c7eff20ac0755'
    try:
        a = requests.get(url)
        data = a.json()
    except:
        return "none", "none", "none", "none", "none", "none", "none", "none", "none", 0.0, 0.0, "none"
    country_name = data.get('country_name')
    ip = data.get('ip')
    continent_code = data.get('continent_code')
    continent_name = data.get('continent_name')
    country_code = data.get('country_code')
    region_code = data.get('region_code')
    region_name = data.get('region_name')
    city = data.get('city')
    zip = data.get('zip')
    latitude = data.get('latitude')
    longitude = data.get('longitude')
    full_report = data
    return ip, country_name, country_code, continent_name, continent_code, region_name, region_code, city, zip, latitude, longitude, full_report
